name: oci-object-uploader
on:
  push:
    tags:
      - "v*"
    branches:
      - 'master'

jobs:
  build-jar-job:
    name: 'Build JAR'
    runs-on: ubuntu-latest

    steps:

      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Setup Java 11'
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: 'Build JAR'
        run: |
          ./gradlew assemble

      - name: 'Get Version Number'
        run: |
          echo "VERSION=$(./gradlew properties -q | grep "version:" | awk '{print $2}')" >> $GITHUB_ENV

      - name: 'Publish JAR'
        uses: actions/upload-artifact@v2-preview
        with:
          name: 'oci-object-uploader-${{env.VERSION}}-all.jar'
          path: build/libs/*-all.jar

      - name: 'Create Release'
        if: contains(github.ref, 'v')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          tag_name: ${{github.ref}}
          release_name: Release ${{github.ref}}
          body: |
            Initial release
          draft: false
          prerelease: false

      - name: 'Upload Release Asset'
        if: contains(github.ref, 'v')
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{steps.create_release.outputs.upload_url}}
          asset_path: build/libs/oci-object-uploader-${{env.VERSION}}-all.jar
          asset_name: oci-object-uploader-${{env.VERSION}}-all.jar
          asset_content_type: application/java-archive


      - name: 'Write Upload URL To File'
        if: contains(github.ref, 'v')
        run: |
          echo "${{steps.create_release.outputs.upload_url}}" > upload_url.txt

      - name: 'Publish Upload URL'
        if: contains(github.ref, 'v')
        uses: actions/upload-artifact@v2-preview
        with:
          name: 'upload_url.txt'
          path: 'upload_url.txt'

  build-non-windows-image:
    name: 'Build Non-Windows Image'
    needs: [build-jar-job]
    strategy:
      matrix:
        os: ['ubuntu-latest', 'macos-latest']
        include:
          - os: 'ubuntu-latest'
            label: 'linux'
          - os: 'macos-latest'
            label: 'mac'
    runs-on: ${{matrix.os}}

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Setup Java 11'
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: 'Setup GraalVM Environment'
        uses: DeLaGuardo/setup-graalvm@5.0
        with:
          graalvm-version: '22.0.0.2.java11'

      - name: 'Install Native Image Plugin'
        run: |
          gu install native-image

      - name: 'Get Version Number'
        run: |
          echo "VERSION=$(./gradlew properties -q | grep "version:" | awk '{print $2}')" >> $GITHUB_ENV

      - name: 'Get JAR Artifact'
        uses: actions/download-artifact@v2-preview
        with:
          name: 'oci-object-uploader-${{env.VERSION}}-all.jar'

      - name: 'Get Release URL'
        if: contains(github.ref, 'v')
        uses: actions/download-artifact@v2-preview
        with:
          name: 'upload_url.txt'

      - name: 'Get Upload URL'
        if: contains(github.ref, 'v')
        run: |
          echo "UPLOAD_URL=$(cat upload_url.txt)" >> $GITHUB_ENV

      - name: 'Build Native Image'
        run: |
          ./gradlew nativeCompile

      - name: 'Publish Native Image'
        if: success()
        uses: actions/upload-artifact@v2-preview
        with:
          name: 'oci-object-uploader-${{env.VERSION}}-${{matrix.label}}'
          path: 'oci-object-uploader'

      - name: 'Release Native Image Asset'
        if: success() && contains(github.ref, 'v')
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{env.UPLOAD_URL}}
          asset_name: 'oci-object-uploader-${{env.VERSION}}-${{matrix.label}}'
          asset_path: 'oci-object-uploader'
          asset_content_type: application/octet-stream

  build-windows-image:
    needs: [build-jar-job]
    name: 'Build Windows Image'
    runs-on: windows-latest
    steps:
      - uses: ilammy/msvc-dev-cmd@v1.5.0
      - uses: microsoft/setup-msbuild@v1
      - uses: ayltai/setup-graalvm@v1
        with:
          java-version: 11
          graalvm-version: 22.0.0.2
          native-image: true

      - name: 'Checkout'
        uses: actions/checkout@v1

      - name: 'Get Version Number'
        run: |
          echo "VERSION=$(./gradlew properties -q | grep "version:" | awk '{print $2}')" >> $GITHUB_ENV
        shell: bash

      - name: 'Build Native Image'
        shell: cmd
        run: |
          ./gradlew nativeCompile --stacktrace

      - name: 'Get Release URL'
        if: contains(github.ref, 'v')
        uses: actions/download-artifact@v2-preview
        with:
          name: 'upload_url.txt'

      - name: 'Get Upload URL'
        if: contains(github.ref, 'v')
        run: |
          echo "UPLOAD_URL=$(cat upload_url.txt)" >> $GITHUB_ENV
        shell: bash

      - name: 'Publish Windows Image'
        if: success()
        uses: actions/upload-artifact@v2-preview
        with:
          name: 'oci-object-uploader-${{env.VERSION}}-windows.exe'
          path: 'oci-object-uploader-${{env.VERSION}}-all.exe'

      - name: 'Release Windows Image Asset'
        if: success() && contains(github.ref, 'v')
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{env.UPLOAD_URL}}
          asset_name: 'oci-object-uploader-${{env.VERSION}}-windows.exe'
          asset_path: 'oci-object-uploader-${{env.VERSION}}-all.exe'
          asset_content_type: application/octet-stream